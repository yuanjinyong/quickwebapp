/**
 * 
 */
package com.quickwebapp.tools.mybatis;

import static org.mybatis.generator.internal.util.StringUtility.isTrue;

import java.util.Properties;

import org.mybatis.generator.api.CommentGenerator;
import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.InnerClass;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.api.dom.java.Parameter;
import org.mybatis.generator.config.PropertyRegistry;
import org.mybatis.generator.internal.DefaultCommentGenerator;

/**
 * @author JohnYuan
 *
 */
public class MyCommentGenerator extends DefaultCommentGenerator implements CommentGenerator {
    private Properties properties;
    private boolean suppressAllComments;

    public MyCommentGenerator() {
        super();
        properties = new Properties();
        suppressAllComments = false;
    }

    /*
     * (non-Javadoc)
     * 
     * @see org.mybatis.generator.internal.DefaultCommentGenerator#addConfigurationProperties(java.util.Properties)
     */
    public void addConfigurationProperties(Properties properties) {
        super.addConfigurationProperties(properties);
        this.properties.putAll(properties);

        suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));
    }

    @Override
    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {
        if (suppressAllComments) {
            return;
        }

        StringBuilder sb = new StringBuilder();
        sb.append(introspectedTable.getFullyQualifiedTable());

        innerClass.addJavaDocLine("/**"); //$NON-NLS-1$
        innerClass.addJavaDocLine(sb.toString());
        addJavadocTag(innerClass, markAsDoNotDelete);
        addJavadocTag(innerClass, false);
        innerClass.addJavaDocLine(" */"); //$NON-NLS-1$
    }
    /*
     * (non-Javadoc)
     * 
     * @see org.mybatis.generator.internal.DefaultCommentGenerator#addClassComment(org.mybatis.generator.api.dom.java.
     * InnerClass, org.mybatis.generator.api.IntrospectedTable)
     */
    @Override
    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {
        if (suppressAllComments) {
            return;
        }

        StringBuilder sb = new StringBuilder();

        innerClass.addJavaDocLine("/**"); //$NON-NLS-1$
        innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator."); //$NON-NLS-1$

        sb.append(" * This class corresponds to the database table "); //$NON-NLS-1$
        sb.append(introspectedTable.getFullyQualifiedTable());
        innerClass.addJavaDocLine(sb.toString());

        addJavadocTag(innerClass, false);

        innerClass.addJavaDocLine(" */"); //$NON-NLS-1$
        // super.addClassComment(innerClass, introspectedTable);
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * org.mybatis.generator.internal.DefaultCommentGenerator#addFieldComment(org.mybatis.generator.api.dom.java.Field,
     * org.mybatis.generator.api.IntrospectedTable, org.mybatis.generator.api.IntrospectedColumn)
     */
    @Override
    public void addFieldComment(Field field, IntrospectedTable introspectedTable,
            IntrospectedColumn introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        String desc = introspectedColumn.getActualColumnName();
        if (introspectedColumn.getRemarks() != null && !introspectedColumn.getRemarks().equals("")) {
            desc += " - " + introspectedColumn.getRemarks();
        }

        field.addJavaDocLine("/**");
        field.addJavaDocLine(" * " + desc);
        addJavadocTag(field, false);
        field.addJavaDocLine(" */");
    }

    /*
     * (non-Javadoc)
     * 
     * @see org.mybatis.generator.internal.DefaultCommentGenerator#addGetterComment(org.mybatis.generator.api.dom.java.
     * Method, org.mybatis.generator.api.IntrospectedTable, org.mybatis.generator.api.IntrospectedColumn)
     */
    @Override
    public void addGetterComment(Method method, IntrospectedTable introspectedTable,
            IntrospectedColumn introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        StringBuilder sb = new StringBuilder();
        sb.append(" * @return the value of "); //$NON-NLS-1$
        sb.append(introspectedTable.getFullyQualifiedTable());
        sb.append('.');
        sb.append(introspectedColumn.getActualColumnName());

        method.addJavaDocLine("/**"); //$NON-NLS-1$
        method.addJavaDocLine(sb.toString());
        addJavadocTag(method, false);
        method.addJavaDocLine(" */"); //$NON-NLS-1$
    }

    /*
     * (non-Javadoc)
     * 
     * @see org.mybatis.generator.internal.DefaultCommentGenerator#addSetterComment(org.mybatis.generator.api.dom.java.
     * Method, org.mybatis.generator.api.IntrospectedTable, org.mybatis.generator.api.IntrospectedColumn)
     */
    @Override
    public void addSetterComment(Method method, IntrospectedTable introspectedTable,
            IntrospectedColumn introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        StringBuilder sb = new StringBuilder();
        Parameter parm = method.getParameters().get(0);
        sb.append(" * @param "); //$NON-NLS-1$
        sb.append(parm.getName());
        sb.append(" the value for "); //$NON-NLS-1$
        sb.append(introspectedTable.getFullyQualifiedTable());
        sb.append('.');
        sb.append(introspectedColumn.getActualColumnName());

        method.addJavaDocLine("/**"); //$NON-NLS-1$
        method.addJavaDocLine(sb.toString());
        addJavadocTag(method, false);
        method.addJavaDocLine(" */"); //$NON-NLS-1$
    }
}
